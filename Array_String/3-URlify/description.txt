Bir stringteki tüm boşluklar yerine '%20' koymak için bir metot yazın. String'in sonunda ek karakterleri 
tutmak için yeterli boşluk olduğunu ve size string'in 'gerçek' uzunluğunun verildiğini varsayabilirsiniz. 
(Not: Eğer Java'da uygulanıyorsa, lütfen bu işlemi yerinde gerçekleştirebilmek için bir karakter dizisi kullanın.)

Girdi: 'Mr John Smith', 13
Çıktı: 'Mr%20John%20Smith'

Kod ve Çözüm:
String isleme problemlerindeki yaygin bir yaklasim, string' sondan baslayip geriye dogru çalisarak duzenlemektir. 
Bu faydalidir çünkü sonunda fazladan bir tamponumuz olur. Ki bu da üzerine yazdigimiz sey hakkinda endiselenmeden 
karakterleri degistirmemizi sagar. Bu yaklasimi bu problemde kullanacagiz. Ilk olarak bosluk sayisini hesaplariz. 
Her bosluk için fazladan iki karaktere ihtiyacimiz vardir (çünkü "% 20', ''' 'den iki karakter daha uzundur). 
Bu yüzden bu sayiyı ikiye katlariz. Sonra, string'in üzerinden (geriye dogru) geçerek düzenleriz. Bir boşluk 
gördügümüzde, onu '%20' ile degistiririz. Eger bosluk yoksa da orijinal karakteri Kopyalariz.

JAVA Code:

void replaceSpaces (char [] str, int trueLength) {
    in numberOfSpaces = countOfChar(str,0,trueLength, ' ');
    int newIndex = trueLength - 1 + numberOfSpaces * 2;

    /* If there are excess spaces, add a null character. 
    * This indicates that the spaces after that point have not been replaced wih %20. */

    if (newIndex + 1 < str.length) str[newIndex + 1] = '\0';
    for (int oldIndex = trueLength - 1; oldIndex >= 0; oldIndex -= 1) {
        if (str[oldIndex] == ' ') {
            /* Insert %20 */
            str[newIndex] = '0';
            str[newIndex - 1] = '2';
            str[newIndex - 2] = '%';
            newIndex -= 3;
        } else {
            str[newIndex] = str[oldIndex];
            newIndex += 1;
        }
    }
    
    }

    /* Count occurances of target between start (inclusive) and end (exclusive) */

    int countOfChar(chat [] str, int start, int end, int start) {
        int count = 0;
        for (int i = start; i < end; i++) {
            if  (str[i] == target) {
                count += 1;
    }
    }
    return count;
    }